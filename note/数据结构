树的周游算法

先序遍历
给定一棵子树，按照先序遍历的方式，首先访问它的根结点，然后是左子结点，最后是右子结点。由于按照从左到右的方式依次遍历各个子树，因此以相同的方式将左子结点和右子结点当做新的子树的根。
先序遍历是按照深度优先的方式遍历结点的
中序遍历
给定一棵子树，按照中序遍历的方式，首先访问左子结点，然后是根结点，最后是右子结点。由于按照从左到右的方式依次遍历各个子树，因此以相同的方式将左子结点和右子结点当做新的子树的根。

后序遍历
给定一棵子树，按照后序遍历的方式，首先访问左子结点，然后是右子结点，最后是根结点。由于按照从左到右的方式依次遍历各个子树，因此以相同的方式将左子结点和右子结点当做新的子树的根。

层级遍历
要用层级遍历的方式周游一棵树，首先访问树的根，然后依次向下层处理，按照从左到右的顺序访问每层的结点。层级遍历运用了广度优先的策略

树的平衡
树的平衡是指对于给定数量的结点，保证树的高度尽可能短的过程。这意味着在结点加入下一层之前必须保证本层结点满额。
正式的说法是，如果满足树的所有叶子结点都在同一层上，或者所有叶子结点都在最后两层上，且倒数第二层是满的，则这棵树是平衡的。
